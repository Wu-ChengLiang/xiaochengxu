{"version":3,"file":"index.js","sources":["../../../../src/pages/appointment/therapist/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Taro, { useRouter } from '@tarojs/taro'\nimport { View, Text, ScrollView, Image } from '@tarojs/components'\nimport { therapistService } from '@/services/therapist'\nimport { storeService } from '@/services/store'\nimport TherapistInfo from './components/TherapistInfo'\nimport StoreInfo from './components/StoreInfo'\nimport BookingSelector, { BookingSelectorHandle } from './components/BookingSelector'\nimport ShoppingCart from './components/ShoppingCart'\nimport type { Therapist, Store } from '@/types'\nimport './index.scss'\n\ninterface CartItem {\n  serviceId: string\n  serviceName: string\n  duration: number\n  price: number\n  discountPrice?: number\n  date: string\n  time: string\n  therapistName: string\n}\n\nconst TherapistSelectionPage: React.FC = () => {\n  const router = useRouter()\n  const { storeId, selectedDate, selectedTime, from } = router.params\n  \n  const [therapists, setTherapists] = useState<Therapist[]>([])\n  const [store, setStore] = useState<Store | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState('')\n\n\n  useEffect(() => {\n    loadData()\n  }, [storeId])\n\n  const loadData = async () => {\n    try {\n      setLoading(true)\n      setError('')\n\n      const [therapistsRes, storeRes] = await Promise.all([\n        therapistService.getTherapistsByStore(storeId as string),\n        storeService.getStoreDetail(storeId as string)\n      ])\n\n      setTherapists(therapistsRes.list)\n      setStore(storeRes.data)\n    } catch (err) {\n      console.error('Failed to load data:', err)\n      setError('加载数据失败，请重试')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleTherapistSelect = (therapist: Therapist) => {\n    // 跳转到症状调理页面\n    const params = {\n      therapistId: therapist.id,\n      therapistName: therapist.name,\n      storeId: storeId as string,\n      storeName: store?.name || '',\n      selectedDate: selectedDate || '',\n      selectedTime: selectedTime || ''\n    }\n    \n    Taro.navigateTo({\n      url: `/pages/appointment/symptom/index?${Object.entries(params)\n        .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n        .join('&')}`\n    })\n  }\n\n  if (loading) {\n    return (\n      <View className=\"therapist-booking-page\">\n        <View className=\"loading\">加载中...</View>\n      </View>\n    )\n  }\n\n  if (error || !store) {\n    return (\n      <View className=\"therapist-selection-page\">\n        <View className=\"error\">{error || '数据加载失败'}</View>\n      </View>\n    )\n  }\n\n  return (\n    <View className=\"therapist-selection-page\">\n      <ScrollView className=\"main-content\" scrollY>\n        <View className=\"store-header\">\n          <Text className=\"store-name\">{store.name}</Text>\n          <Text className=\"selected-time\">\n            {selectedDate && selectedTime ? `${selectedDate} ${selectedTime}` : '请选择推拿师'}\n          </Text>\n        </View>\n        \n        <View className=\"therapists-list\">\n          {therapists.map((therapist) => (\n            <View \n              key={therapist.id} \n              className=\"therapist-card\"\n              onClick={() => handleTherapistSelect(therapist)}\n            >\n              <View className=\"therapist-avatar\">\n                <Image src={therapist.avatar} mode=\"aspectFill\" />\n              </View>\n              <View className=\"therapist-info\">\n                <View className=\"name-rating\">\n                  <Text className=\"name\">{therapist.name}</Text>\n                  <View className=\"rating\">\n                    <Text className=\"rating-score\">⭐ {therapist.rating}</Text>\n                    <Text className=\"rating-count\">({therapist.ratingCount})</Text>\n                  </View>\n                </View>\n                <View className=\"expertise\">\n                  {therapist.expertise.map((skill, index) => (\n                    <Text key={index} className=\"skill-tag\">{skill}</Text>\n                  ))}\n                </View>\n                <View className=\"experience\">\n                  <Text className=\"years\">{therapist.yearsOfExperience}年经验</Text>\n                  <Text className=\"service-count\">已服务{therapist.serviceCount}人</Text>\n                  <View className={`status ${therapist.status}`}>\n                    {therapist.status === 'available' && '可预约'}\n                    {therapist.status === 'busy' && '繁忙'}\n                    {therapist.status === 'rest' && '休息'}\n                  </View>\n                </View>\n              </View>\n              <View className=\"arrow\">→</View>\n            </View>\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  )\n}\n\nexport default TherapistSelectionPage"],"names":["TherapistSelectionPage","router","useRouter","storeId","selectedDate","selectedTime","from","params","therapists","setTherapists","useState","store","setStore","loading","setLoading","error","setError","useEffect","loadData","therapistsRes","storeRes","Promise","all","therapistService","getTherapistsByStore","storeService","getStoreDetail","list","data","err","handleTherapistSelect","therapist","therapistId","id","therapistName","name","storeName","Taro","navigateTo","url","Object","entries","map","key","value","encodeURIComponent","join","jsx","View","ScrollView","jsxs","Text","Image","avatar","rating","ratingCount","expertise","skill","index","yearsOfExperience","serviceCount","status"],"mappings":"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"}