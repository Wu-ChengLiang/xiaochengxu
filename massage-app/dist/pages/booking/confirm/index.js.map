{"version":3,"file":"index.js","sources":["../../../../src/pages/booking/confirm/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { View, Text, Image, ScrollView } from '@tarojs/components'\nimport Taro, { useRouter } from '@tarojs/taro'\nimport { orderService, CreateOrderParams } from '@/services/order'\nimport { storeService } from '@/services/store'\nimport { therapistService } from '@/services/therapist'\nimport { walletService } from '@/services/wallet.service'\nimport { paymentService } from '@/services/payment.service'\nimport { voucherService } from '@/services/voucher.service'\nimport { calculateDiscountPrice } from '@/types/voucher'\nimport { getCurrentUserInfo } from '@/utils/user'\nimport './index.scss'\n\ninterface CartItem {\n  id?: string  // 唯一标识符（可选，向后兼容）\n  serviceId: string\n  serviceName: string\n  duration: number\n  price: number\n  discountPrice?: number\n  date: string\n  time: string\n  therapistId?: string\n  therapistName: string\n  therapistAvatar?: string\n}\n\ninterface OrderConfirmPageParams {\n  therapistId?: string\n  storeId: string\n  items: string // JSON string of CartItem[]\n  from?: string  // 来源标识，如 'symptom'\n}\n\nconst OrderConfirmPage: React.FC = () => {\n  const router = useRouter()\n  const params = router.params as unknown as OrderConfirmPageParams\n  \n  const [cartItems, setCartItems] = useState<CartItem[]>([])\n  const [therapistInfo, setTherapistInfo] = useState<any>(null)\n  const [storeInfo, setStoreInfo] = useState<any>(null)\n  const [loading, setLoading] = useState(true)\n  const [countdown, setCountdown] = useState(180) // 3分钟倒计时\n  const [paymentMethod, setPaymentMethod] = useState<'wechat' | 'balance'>('wechat')\n  const [userBalance, setUserBalance] = useState(0) // 用户余额\n  const [balanceLoading, setBalanceLoading] = useState(false)\n  const [userDiscountRate, setUserDiscountRate] = useState<number | null>(null) // 用户折扣率\n  const [hasVoucher, setHasVoucher] = useState(false) // 是否有优惠券\n  const timerRef = useRef<any>(null)\n\n  useEffect(() => {\n    // 解析传递的数据\n    try {\n      const items = JSON.parse(decodeURIComponent(params.items || '[]'))\n      setCartItems(items)\n\n      // 获取推拿师和门店信息\n      fetchTherapistAndStoreInfo()\n      // 获取用户余额\n      fetchUserBalance()\n      // 获取用户折扣信息\n      fetchUserDiscount()\n    } catch (error) {\n      Taro.showToast({\n        title: '数据解析失败',\n        icon: 'none'\n      })\n      setTimeout(() => Taro.navigateBack(), 1500)\n    }\n  }, [params])\n\n  // 倒计时逻辑\n  useEffect(() => {\n    if (!loading && cartItems.length > 0) {\n      timerRef.current = setInterval(() => {\n        setCountdown((prev) => {\n          if (prev <= 1) {\n            clearInterval(timerRef.current)\n            Taro.showModal({\n              title: '支付超时了呦',\n              content: '快快重新下单吧~',\n              showCancel: false,\n              success: () => {\n                Taro.navigateBack()\n              }\n            })\n            return 0\n          }\n          return prev - 1\n        })\n      }, 1000)\n    }\n\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current)\n      }\n    }\n  }, [loading, cartItems])\n\n  // 获取用户折扣信息\n  const fetchUserDiscount = async () => {\n    try {\n      const userInfo = getCurrentUserInfo()\n      if (userInfo && userInfo.discountRate) {\n        setUserDiscountRate(userInfo.discountRate)\n        // 检查是否有优惠券\n        const vouchers = await voucherService.getMyVouchers()\n        setHasVoucher(vouchers.length > 0)\n      }\n    } catch (error) {\n      console.error('获取用户折扣信息失败:', error)\n    }\n  }\n\n  // 获取用户余额\n  const fetchUserBalance = async () => {\n    try {\n      setBalanceLoading(true)\n      const balance = await walletService.getBalance()  // 返回值是元\n      setUserBalance(balance)\n\n      // 如果余额充足，默认选择余额支付\n      // ✅ getTotalPrice()返回元，balance也是元，直接比较\n      const totalPrice = getTotalPrice()  // 元\n      if (balance >= totalPrice) { // balance(元) >= totalPrice(元)\n        setPaymentMethod('balance')\n      }\n    } catch (error) {\n      console.error('获取余额失败:', error)\n      setUserBalance(0)\n    } finally {\n      setBalanceLoading(false)\n    }\n  }\n\n  const fetchTherapistAndStoreInfo = async () => {\n    try {\n      setLoading(true)\n\n      // 获取推拿师信息（仅在有therapistId时获取）\n      if (params.therapistId) {\n        const therapistRes = await therapistService.getTherapistDetail(params.therapistId)\n        setTherapistInfo(therapistRes.data)\n      }\n\n      // 获取门店信息\n      const storeRes = await storeService.getStoreDetail(params.storeId)\n      const storeData = storeRes.data\n\n      setStoreInfo(storeData)\n      setLoading(false)\n    } catch (error) {\n      setLoading(false)\n      Taro.showToast({\n        title: '获取信息失败',\n        icon: 'none'\n      })\n    }\n  }\n\n  const formatCountdown = (seconds: number) => {\n    const mins = Math.floor(seconds / 60)\n    const secs = seconds % 60\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`\n  }\n\n  const formatDate = (dateStr: string) => {\n    const date = new Date(dateStr)\n    const month = date.getMonth() + 1\n    const day = date.getDate()\n    return `${month.toString().padStart(2, '0')}月${day.toString().padStart(2, '0')}日`\n  }\n\n  const calculateEndTime = (time: string, duration: number) => {\n    const [hour, minute] = time.split(':').map(Number)\n    const endMinute = minute + duration\n    const endHour = hour + Math.floor(endMinute / 60)\n    const finalMinute = endMinute % 60\n    return `${endHour}:${finalMinute.toString().padStart(2, '0')}`\n  }\n\n  const getTotalPrice = () => {\n    const originalTotal = cartItems.reduce((sum, item) => sum + item.price, 0)\n    // 如果有折扣率，计算折后价\n    if (userDiscountRate && userDiscountRate < 1) {\n      const discountInfo = calculateDiscountPrice(originalTotal, userDiscountRate)\n      return discountInfo.finalPrice\n    }\n    // 否则使用原价或已有的折扣价\n    return cartItems.reduce((sum, item) => sum + (item.discountPrice || item.price), 0)\n  }\n\n  // 获取原价（用于展示划线价）\n  const getOriginalPrice = () => {\n    return cartItems.reduce((sum, item) => sum + item.price, 0)\n  }\n\n  // 获取节省金额\n  const getSavedAmount = () => {\n    const originalTotal = getOriginalPrice()\n    const finalTotal = getTotalPrice()\n    return originalTotal - finalTotal\n  }\n\n  // 获取折扣描述\n  const getDiscountDisplay = () => {\n    if (userDiscountRate && userDiscountRate < 1) {\n      const percentage = Math.round(userDiscountRate * 100)\n      return `${percentage}折`\n    }\n    return ''\n  }\n\n  // 检查余额是否充足\n  const isBalanceSufficient = () => {\n    const totalPrice = getTotalPrice()  // 元\n    return userBalance >= totalPrice   // 两个都是元，直接比较\n  }\n\n  // 处理支付方式切换\n  const handlePaymentMethodChange = (method: 'wechat' | 'balance') => {\n    if (method === 'balance' && !isBalanceSufficient()) {\n      Taro.showToast({\n        title: '余额不足，请充值或使用其他支付方式',\n        icon: 'none',\n        duration: 2000\n      })\n      return\n    }\n    setPaymentMethod(method)\n  }\n\n  const handlePayment = async () => {\n    // 症状调理模式下推拿师信息在cartItems中，不需要therapistInfo\n    const isSymptomMode = params.from === 'symptom'\n    const needTherapistInfo = !isSymptomMode && !therapistInfo\n\n    if (cartItems.length === 0 || needTherapistInfo || !storeInfo) {\n      Taro.showToast({\n        title: '订单信息不完整',\n        icon: 'none'\n      })\n      return\n    }\n\n    // 余额支付前再次检查余额\n    if (paymentMethod === 'balance' && !isBalanceSufficient()) {\n      Taro.showToast({\n        title: '余额不足，请充值或使用其他支付方式',\n        icon: 'none',\n        duration: 2000\n      })\n      return\n    }\n\n    try {\n      Taro.showLoading({\n        title: '创建订单...'\n      })\n\n      // 使用第一个购物项的信息（如果有多个服务，可以后续优化）\n      const firstItem = cartItems[0]\n\n      // 调试日志 - 查看购物车项目数据\n      console.log('🛒 购物车第一个项目:', firstItem)\n      console.log('🛒 firstItem.therapistId:', firstItem.therapistId)\n      console.log('🛒 params.therapistId:', params.therapistId)\n      console.log('🛒 params.from:', params.from)\n\n      const orderParams: CreateOrderParams = {\n        therapistId: firstItem.therapistId || params.therapistId || 'symptom-mode', // 优先使用购物车中的技师ID\n        storeId: params.storeId,\n        serviceId: firstItem.serviceId,\n        serviceName: firstItem.serviceName,\n        duration: firstItem.duration,\n        price: firstItem.price,\n        discountPrice: firstItem.discountPrice,\n        appointmentDate: firstItem.date,\n        appointmentTime: firstItem.time,\n        therapistName: firstItem.therapistName,\n        therapistAvatar: firstItem.therapistAvatar || (therapistInfo?.avatar)\n      }\n\n      // 调试日志 - 查看最终的订单参数\n      console.log('📦 最终的订单参数:', orderParams)\n      console.log('📦 therapistId将要传递的值:', orderParams.therapistId)\n\n      // 创建订单\n      const result = await orderService.createAppointmentOrder(orderParams)\n      const order = result.order\n\n      console.log('✅ 订单创建成功:', result)\n      console.log('✅ 订单号:', order.orderNo)\n      console.log('✅ 支付参数:', order.wxPayParams)\n\n      Taro.hideLoading()\n\n      // ✅ 检查订单创建结果\n      if (!order || !order.orderNo) {\n        throw new Error('订单创建失败，未返回订单号')\n      }\n\n      // ✅ 微信支付需要检查wxPayParams\n      if (paymentMethod === 'wechat') {\n        if (!order.wxPayParams) {\n          throw new Error('微信支付参数缺失，请检查用户登录状态或尝试余额支付')\n        }\n        console.log('✅ 微信支付参数完整性检查:', {\n          timeStamp: !!order.wxPayParams.timeStamp,\n          nonceStr: !!order.wxPayParams.nonceStr,\n          package: !!order.wxPayParams.package,\n          signType: !!order.wxPayParams.signType,\n          paySign: !!order.wxPayParams.paySign\n        })\n      }\n\n      // 调用统一支付接口\n      const paymentSuccess = await paymentService.pay({\n        orderNo: order.orderNo,\n        amount: (order.totalAmount || getTotalPrice()) * 100, // ✅ getTotalPrice()返回元，需要乘以100转为分\n        paymentMethod: paymentMethod,\n        title: `${firstItem.serviceName} - ${firstItem.therapistName}`,\n        wxPayParams: order.wxPayParams  // 传递后端返回的微信支付参数\n      } as any)\n\n      if (paymentSuccess) {\n        // 支付成功后更新余额显示\n        if (paymentMethod === 'balance') {\n          await fetchUserBalance()\n        }\n\n        setTimeout(() => {\n          Taro.redirectTo({\n            url: `/pages/booking/success/index?orderNo=${order.orderNo}`\n          })\n        }, 1500)\n      }\n      // 注意: 如果支付失败或用户取消, paymentService.pay() 内部已经显示错误提示\n      // 不需要额外处理\n    } catch (error) {\n      console.error('❌ 支付流程错误:', error)\n      Taro.hideLoading()\n\n      // ✅ 显示更详细的错误信息\n      const errorMessage = error.message || error.errMsg || '订单创建失败'\n      Taro.showModal({\n        title: '支付失败',\n        content: errorMessage,\n        showCancel: false,\n        confirmText: '知道了'\n      })\n    }\n  }\n\n  if (loading) {\n    return (\n      <View className=\"order-confirm-page\">\n        <View className=\"loading\">加载中...</View>\n      </View>\n    )\n  }\n\n  return (\n    <ScrollView className=\"order-confirm-page\" scrollY>\n      {/* 门店信息 */}\n      <View className=\"store-section\">\n        <Text className=\"store-name\">{storeInfo?.name}</Text>\n        <Text className=\"store-distance\">📍 {storeInfo?.distance}km</Text>\n      </View>\n\n      {/* 预约信息 */}\n      <View className=\"booking-info\">\n        {cartItems.map((item, index) => (\n          <View key={index} className=\"booking-item\">\n            <Image \n              className=\"therapist-avatar\" \n              src={item.therapistAvatar || therapistInfo?.avatar} \n            />\n            <View className=\"booking-details\">\n              <View className=\"therapist-name\">{item.therapistName}</View>\n              <View className=\"service-time\">\n                {formatDate(item.date)} {item.time} 至 {calculateEndTime(item.time, item.duration)}\n              </View>\n              <View className=\"service-name\">{item.serviceName}</View>\n            </View>\n            <View className=\"service-price\">¥{item.discountPrice || item.price}</View>\n          </View>\n        ))}\n      </View>\n\n      {/* 退单说明 */}\n      <View className=\"refund-policy\">\n        <Text className=\"policy-title\">退单说明</Text>\n        <View className=\"policy-list\">\n          <View className=\"policy-item\">\n            • 下单15分钟内或距订单开始时间&gt;6小时退单，退100%\n          </View>\n          <View className=\"policy-item\">\n            • 距订单开始前&lt;6小时退单，退实付金额90%\n          </View>\n          <View className=\"policy-item\">\n            • 订单时间开始后退单，退实付金额80%\n          </View>\n        </View>\n      </View>\n\n      {/* 客户备注 */}\n      <View className=\"customer-note\">\n        <Text className=\"note-title\">客户备注</Text>\n        <Text className=\"note-hint\">您对茶水、房间、按摩服等是否有特殊需求，我们将提前为您做好准备</Text>\n      </View>\n\n      {/* 支付方式 */}\n      <View className=\"payment-section\">\n        <Text className=\"section-title\">支付方式</Text>\n        <View className=\"payment-methods\">\n          {/* 余额支付 */}\n          <View\n            className={`payment-method ${paymentMethod === 'balance' ? 'active' : ''} ${!isBalanceSufficient() ? 'disabled' : ''}`}\n            onClick={() => handlePaymentMethodChange('balance')}\n          >\n            <View className=\"method-info\">\n              <Text className=\"method-icon\">💰</Text>\n              <Text className=\"method-name\">余额支付</Text>\n              <Text className=\"balance-amount\">\n                {balanceLoading ? '加载中...' : `¥${userBalance.toFixed(2)}`}\n                {!isBalanceSufficient() && !balanceLoading && (\n                  <Text className=\"insufficient\"> (余额不足)</Text>\n                )}\n              </Text>\n            </View>\n            <View className={`check-icon ${paymentMethod === 'balance' ? 'checked' : ''}`} />\n          </View>\n\n          {/* 微信支付 */}\n          <View\n            className={`payment-method ${paymentMethod === 'wechat' ? 'active' : ''}`}\n            onClick={() => handlePaymentMethodChange('wechat')}\n          >\n            <View className=\"method-info\">\n              <Text className=\"method-icon\">💚</Text>\n              <Text className=\"method-name\">微信支付</Text>\n            </View>\n            <View className={`check-icon ${paymentMethod === 'wechat' ? 'checked' : ''}`} />\n          </View>\n        </View>\n      </View>\n\n      {/* 底部支付栏 */}\n      <View className=\"payment-bar\">\n        <View className=\"price-info\">\n          {userDiscountRate && userDiscountRate < 1 && getSavedAmount() > 0 ? (\n            <View className=\"price-with-discount\">\n              <View className=\"discount-info\">\n                <Text className=\"discount-tag\">{getDiscountDisplay()}</Text>\n                <Text className=\"saved-amount\">已优惠 ¥{getSavedAmount()}</Text>\n              </View>\n              <View className=\"price-display\">\n                <Text className=\"original-price\">¥{getOriginalPrice()}</Text>\n                <Text className=\"total-price\">¥{getTotalPrice()}</Text>\n              </View>\n            </View>\n          ) : (\n            <Text className=\"total-price\">¥{getTotalPrice()}</Text>\n          )}\n          <Text className=\"countdown\">支付倒计时: {formatCountdown(countdown)}</Text>\n        </View>\n        <View className=\"pay-button\" onClick={handlePayment}>\n          去支付\n        </View>\n      </View>\n    </ScrollView>\n  )\n}\n\nexport default OrderConfirmPage"],"names":["OrderConfirmPage","router","useRouter","params","cartItems","setCartItems","useState","therapistInfo","setTherapistInfo","storeInfo","setStoreInfo","loading","setLoading","countdown","setCountdown","paymentMethod","setPaymentMethod","userBalance","setUserBalance","balanceLoading","setBalanceLoading","userDiscountRate","setUserDiscountRate","hasVoucher","setHasVoucher","timerRef","useRef","useEffect","items","JSON","parse","decodeURIComponent","error","Taro","showToast","title","icon","setTimeout","navigateBack","length","current","setInterval","prev","clearInterval","showModal","content","showCancel","success","fetchUserDiscount","userInfo","getCurrentUserInfo","discountRate","vouchers","voucherService","getMyVouchers","fetchUserBalance","balance","walletService","getBalance","totalPrice","getTotalPrice","fetchTherapistAndStoreInfo","therapistId","therapistRes","therapistService","getTherapistDetail","data","storeRes","storeService","getStoreDetail","storeId","storeData","formatCountdown","seconds","mins","Math","floor","secs","toString","padStart","formatDate","dateStr","date","Date","month","getMonth","day","getDate","calculateEndTime","time","duration","hour","minute","split","map","Number","endMinute","endHour","finalMinute","originalTotal","reduce","sum","item","price","discountInfo","calculateDiscountPrice","finalPrice","discountPrice","getOriginalPrice","getSavedAmount","finalTotal","getDiscountDisplay","percentage","round","isBalanceSufficient","handlePaymentMethodChange","method","handlePayment","isSymptomMode","from","needTherapistInfo","showLoading","firstItem","log","orderParams","serviceId","serviceName","appointmentDate","appointmentTime","therapistName","therapistAvatar","avatar","result","orderService","createAppointmentOrder","order","orderNo","wxPayParams","hideLoading","Error","console","timeStamp","nonceStr","package","signType","paySign","paymentSuccess","paymentService","pay","amount","totalAmount","redirectTo","url","errorMessage","message","errMsg","confirmText","jsx","View","jsxs","ScrollView","Text","name","distance","index","Image","toFixed"],"mappings":"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"}