{"version":3,"file":"index.js","sources":["../../../../src/utils/date.ts","../../../../src/pages/order/list/index.tsx"],"sourcesContent":["/**\n * 日期格式转换工具\n *\n * 问题：iOS 不支持 \"2025-10-22 11:35:45\" 格式\n * 解决：转换为 ISO 8601 格式 \"2025-10-22T11:35:45\"\n *\n * 支持的格式：\n * - \"yyyy/MM/dd\"\n * - \"yyyy/MM/dd HH:mm:ss\"\n * - \"yyyy-MM-dd\"\n * - \"yyyy-MM-ddTHH:mm:ss\"\n * - \"yyyy-MM-ddTHH:mm:ss+HH:mm\"\n */\n\n/**\n * 将日期字符串转换为 iOS 兼容的格式\n * @param dateStr 日期字符串，如 \"2025-10-22 11:35:45\"\n * @returns iOS 兼容的日期字符串，如 \"2025-10-22T11:35:45\"\n */\nexport const toIOSCompatibleDate = (dateStr: string | undefined | null): string | null => {\n  if (!dateStr) {\n    return null\n  }\n\n  // 已经是 ISO 8601 格式，直接返回\n  if (dateStr.includes('T')) {\n    return dateStr\n  }\n\n  // 将空格替换为 T，转换为 ISO 8601 格式\n  // \"2025-10-22 11:35:45\" → \"2025-10-22T11:35:45\"\n  return dateStr.replace(' ', 'T')\n}\n\n/**\n * 安全地解析日期字符串\n * @param dateStr 日期字符串\n * @returns Date 对象，如果解析失败返回 null\n */\nexport const parseDate = (dateStr: string | undefined | null): Date | null => {\n  if (!dateStr) {\n    return null\n  }\n\n  // 转换为 iOS 兼容格式再解析\n  const isoDate = toIOSCompatibleDate(dateStr)\n  if (!isoDate) {\n    return null\n  }\n\n  const date = new Date(isoDate)\n\n  // 检查是否为有效的日期\n  if (isNaN(date.getTime())) {\n    console.warn('⚠️ 无效的日期格式:', dateStr)\n    return null\n  }\n\n  return date\n}\n\n/**\n * 格式化日期为本地格式\n * @param dateStr 日期字符串\n * @param format 格式字符串，如 \"yyyy-MM-dd HH:mm\"\n * @returns 格式化后的日期字符串\n */\nexport const formatDate = (\n  dateStr: string | undefined | null,\n  format: string = 'yyyy-MM-dd HH:mm'\n): string => {\n  const date = parseDate(dateStr)\n  if (!date) {\n    return ''\n  }\n\n  const year = date.getFullYear()\n  const month = String(date.getMonth() + 1).padStart(2, '0')\n  const day = String(date.getDate()).padStart(2, '0')\n  const hours = String(date.getHours()).padStart(2, '0')\n  const minutes = String(date.getMinutes()).padStart(2, '0')\n  const seconds = String(date.getSeconds()).padStart(2, '0')\n\n  return format\n    .replace('yyyy', String(year))\n    .replace('MM', month)\n    .replace('dd', day)\n    .replace('HH', hours)\n    .replace('mm', minutes)\n    .replace('ss', seconds)\n}\n","import React, { useState, useEffect } from 'react'\nimport { View, Text, Image, ScrollView } from '@tarojs/components'\nimport Taro, { useDidShow, usePullDownRefresh } from '@tarojs/taro'\nimport { AtTabs, AtTabsPane, AtIcon } from 'taro-ui'\nimport { orderService, OrderData } from '@/services/order'\nimport { formatAmount } from '@/utils/amount'  // ✅ 新增导入\nimport { parseDate } from '@/utils/date'  // ✅ iOS 兼容日期处理\nimport './index.scss'\n\nconst OrderListPage: React.FC = () => {\n  const [current, setCurrent] = useState(0)\n  const [orders, setOrders] = useState<OrderData[]>([])\n  const [loading, setLoading] = useState(true)\n  const [hasMore, setHasMore] = useState(false)\n  const [page, setPage] = useState(1)\n\n  const tabList = [\n    { title: '全部' },\n    { title: '待支付' },\n    { title: '待服务' },\n    { title: '已完成' }\n  ]\n\n  const statusMap = {\n    0: undefined, // 全部\n    1: 'pending', // 待支付\n    2: 'paid', // 待服务\n    3: 'completed' // 已完成\n  } as const\n\n  useDidShow(() => {\n    setPage(1)\n    fetchOrders(1)\n  })\n\n  useEffect(() => {\n    setPage(1)\n    fetchOrders(1)\n  }, [current])\n\n  usePullDownRefresh(async () => {\n    await fetchOrders(1)\n    Taro.stopPullDownRefresh()\n  })\n\n  const fetchOrders = async (pageNum: number = page) => {\n    try {\n      setLoading(true)\n      const status = statusMap[current]\n\n      // 获取所有订单（服务订单 + 产品订单），然后根据displayStatus筛选\n      let orderList = await orderService.getOrderList(\n        undefined, // 先不按paymentStatus筛选\n        undefined, // 不过滤订单类型，同时获取服务订单和产品订单\n        pageNum,\n        100 // 获取更多以便筛选\n      )\n\n      // 根据标签页筛选订单\n      if (status) {\n        orderList = orderList.filter(order => {\n          const displayStatus = order.displayStatus || order.paymentStatus\n\n          // 特殊处理：已完成标签页显示completed状态\n          if (status === 'completed') {\n            return displayStatus === 'completed'\n          }\n          // 待服务标签页：显示paid状态（包括pending和confirmed的预约）\n          if (status === 'paid') {\n            return displayStatus === 'paid'\n          }\n          // 待支付标签页\n          if (status === 'pending') {\n            return displayStatus === 'pending'\n          }\n\n          return displayStatus === status\n        })\n      }\n\n      // 只取前20条\n      const paginatedList = orderList.slice(0, 20)\n\n      if (pageNum === 1) {\n        setOrders(paginatedList)\n      } else {\n        setOrders(prev => [...prev, ...paginatedList])\n      }\n\n      setPage(pageNum)\n      setHasMore(paginatedList.length === 20)\n    } catch (error) {\n      console.error('获取订单失败:', error)\n      if (pageNum === 1) {\n        setOrders([])\n      }\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleTabClick = (index: number) => {\n    setCurrent(index)\n  }\n\n  const handleOrderClick = (orderNo: string) => {\n    Taro.navigateTo({\n      url: `/pages/order/detail/index?orderNo=${orderNo}`\n    })\n  }\n\n  const handlePayOrder = async (e: any, order: OrderData) => {\n    e.stopPropagation()\n\n    // 🚀 改进：数据验证\n    console.log('💳 准备支付订单:', {\n      orderNo: order.orderNo,\n      amount: order.amount,\n      amountType: typeof order.amount\n    })\n\n    // 验证金额有效性\n    if (!order.amount || typeof order.amount !== 'number' || isNaN(order.amount)) {\n      Taro.showToast({\n        title: '订单金额无效，无法支付',\n        icon: 'none'\n      })\n      console.error('❌ 支付验证失败：无效的订单金额', { orderNo: order.orderNo, amount: order.amount })\n      return\n    }\n\n    try {\n      // 获取支付参数\n      const paymentParams = await orderService.getPaymentParams(order.orderNo)\n\n      // 调用微信支付\n      Taro.requestPayment({\n        ...paymentParams,\n        success: async () => {\n          // 更新订单状态\n          await orderService.updateOrderStatus(order.orderNo, 'paid')\n          Taro.showToast({\n            title: '支付成功',\n            icon: 'success'\n          })\n          // 刷新订单列表\n          fetchOrders()\n        },\n        fail: (err) => {\n          if (err.errMsg !== 'requestPayment:fail cancel') {\n            Taro.showToast({\n              title: '支付失败',\n              icon: 'none'\n            })\n          }\n        }\n      })\n    } catch (error) {\n      console.error('❌ 获取支付参数失败:', error)\n      Taro.showToast({\n        title: '获取支付参数失败',\n        icon: 'none'\n      })\n    }\n  }\n\n  const handleCancelOrder = async (e: any, order: OrderData) => {\n    e.stopPropagation()\n\n    Taro.showModal({\n      title: '取消订单',\n      content: '确定要取消该订单吗？',\n      success: async (res) => {\n        if (res.confirm) {\n          try {\n            const result = await orderService.cancelOrder(order.orderNo)\n\n            if (result.refundAmount && result.refundAmount > 0) {\n              Taro.showToast({\n                title: `已取消，退款￥${(result.refundAmount / 100).toFixed(2)}`,\n                icon: 'success',\n                duration: 2500\n              })\n            } else {\n              Taro.showToast({\n                title: '订单已取消',\n                icon: 'success'\n              })\n            }\n\n            // 刷新列表\n            fetchOrders(1)\n          } catch (error: any) {\n            Taro.showToast({\n              title: error.message || '取消失败',\n              icon: 'none'\n            })\n          }\n        }\n      }\n    })\n  }\n\n  const handleRebookOrder = (e: any, order: OrderData) => {\n    e.stopPropagation()\n    // 跳转到预约首页重新预约\n    Taro.switchTab({\n      url: '/pages/appointment/index'\n    })\n  }\n\n  const getStatusText = (order: OrderData) => {\n    // 使用综合显示状态（优先）或支付状态（降级）\n    const status = order.displayStatus || order.paymentStatus\n\n    const statusTextMap = {\n      'pending': '待支付',\n      'paid': '待服务',\n      'serving': '服务中',\n      'completed': '已完成',  // 🚀 管理员标记的完成状态\n      'cancelled': '已取消',\n      'refunded': '已退款'\n    }\n    return statusTextMap[status] || status\n  }\n\n  const getStatusClass = (order: OrderData) => {\n    // 使用综合显示状态（优先）或支付状态（降级）\n    const status = order.displayStatus || order.paymentStatus\n\n    const statusClassMap = {\n      'pending': 'status-pending',\n      'paid': 'status-paid',\n      'serving': 'status-serving',\n      'completed': 'status-completed',  // 🚀 已完成样式\n      'cancelled': 'status-cancelled',\n      'refunded': 'status-refunded'\n    }\n    return statusClassMap[status] || ''\n  }\n\n  const formatDate = (dateStr: string) => {\n    // ✅ 改进：使用 iOS 兼容的日期处理函数\n    // 将 \"2025-10-22 11:35:45\" 转换为 \"2025-10-22T11:35:45\"（iOS 兼容格式）\n    const date = parseDate(dateStr)\n    if (!date) {\n      return ''\n    }\n    const month = date.getMonth() + 1\n    const day = date.getDate()\n    const hour = date.getHours()\n    const minute = date.getMinutes()\n    return `${month}月${day}日 ${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`\n  }\n\n  const renderOrderItem = (order: OrderData) => (\n    <View\n      key={order.orderNo}\n      className=\"order-item\"\n      onClick={() => handleOrderClick(order.orderNo)}\n    >\n      <View className=\"order-header\">\n        {/* 服务订单显示门店名 */}\n        {order.orderType === 'service' && (\n          <Text className=\"store-name\">{order.storeName}</Text>\n        )}\n        {/* 产品订单显示产品名称 */}\n        {order.orderType === 'product' && (\n          <Text className=\"store-name\">{order.title}</Text>\n        )}\n        <Text className={`order-status ${getStatusClass(order)}`}>\n          {getStatusText(order)}\n        </Text>\n      </View>\n\n      <View className=\"order-content\">\n        {/* 服务订单显示技师头像 */}\n        {order.orderType === 'service' && order.therapistAvatar && (\n          <Image\n            className=\"therapist-avatar\"\n            src={order.therapistAvatar}\n          />\n        )}\n        {/* 产品订单：不显示默认图片（避免 404 错误） */}\n        {/* order.orderType === 'product' 时不显示任何图片 */}\n\n        <View className={`order-info ${!order.therapistAvatar && order.orderType === 'service' ? 'no-image' : ''}`}>\n          {/* 🚀 服务订单没有头像时显示占位符 */}\n          {/* 服务订单信息 */}\n          {order.orderType === 'service' && (\n            <>\n              <View className=\"info-row\">\n                <Text className=\"therapist-name\">{order.therapistName}</Text>\n                <Text className=\"service-name\">{order.serviceName}</Text>\n              </View>\n              <View className=\"info-row\">\n                <Text className=\"appointment-time\">\n                  预约时间：{formatDate(`${order.appointmentDate} ${order.startTime}`)}  {/* ✅ 改为 startTime */}\n                </Text>\n              </View>\n            </>\n          )}\n\n          {/* 产品订单信息 */}\n          {order.orderType === 'product' && (\n            <>\n              <View className=\"info-row\">\n                <Text className=\"service-name\">{order.title}</Text>\n                {order.extraData?.quantity && (\n                  <Text className=\"quantity\">×{order.extraData.quantity}</Text>\n                )}\n              </View>\n              <View className=\"info-row\">\n                <Text className=\"appointment-time\">\n                  购买时间：{formatDate(order.createdAt)}\n                </Text>\n              </View>\n            </>\n          )}\n\n          <View className=\"info-row\">\n            <Text className=\"order-no\">订单号：{order.orderNo}</Text>\n          </View>\n        </View>\n      </View>\n\n      <View className=\"order-footer\">\n        <View className=\"price-info\">\n          <Text className=\"label\">实付：</Text>\n          <Text className=\"price\">{formatAmount(order.amount)}</Text>  {/* ✅ 改为使用 formatAmount() 和 amount 字段 */}\n        </View>\n        <View className=\"action-buttons\">\n          {/* 待支付订单：显示支付和取消 */}\n          {(order.displayStatus || order.paymentStatus) === 'pending' && (\n            <>\n              <View className=\"button cancel\" onClick={(e) => handleCancelOrder(e, order)}>\n                取消订单\n              </View>\n              <View className=\"button pay\" onClick={(e) => handlePayOrder(e, order)}>\n                去支付\n              </View>\n            </>\n          )}\n\n          {/* 待服务订单：仅服务订单显示取消 */}\n          {(order.displayStatus || order.paymentStatus) === 'paid' && order.orderType === 'service' && (\n            <View className=\"button cancel\" onClick={(e) => handleCancelOrder(e, order)}>\n              取消订单\n            </View>\n          )}\n\n          {/* 服务中订单：不显示操作按钮 */}\n          {(order.displayStatus || order.paymentStatus) === 'serving' && null}\n\n          {/* 已完成订单：仅服务订单显示再次预约 */}\n          {(order.displayStatus === 'completed') && order.orderType === 'service' && (\n            <View className=\"button rebook\" onClick={(e) => handleRebookOrder(e, order)}>\n              再次预约\n            </View>\n          )}\n\n          {/* 已取消/已退款订单：仅服务订单显示再次预约 */}\n          {(['cancelled', 'refunded'].includes(order.displayStatus || order.paymentStatus)) && order.orderType === 'service' && (\n            <View className=\"button rebook\" onClick={(e) => handleRebookOrder(e, order)}>\n              再次预约\n            </View>\n          )}\n        </View>\n      </View>\n    </View>\n  )\n\n  const renderEmpty = () => (\n    <View className=\"empty-state\">\n      <AtIcon value=\"file-generic\" size=\"60\" color=\"#ccc\" />\n      <Text className=\"empty-text\">暂无订单</Text>\n    </View>\n  )\n\n  const renderLoading = () => (\n    <View className=\"loading-state\">\n      <Text>加载中...</Text>\n    </View>\n  )\n\n  return (\n    <View className=\"order-list-page\">\n      <AtTabs\n        current={current}\n        tabList={tabList}\n        onClick={handleTabClick}\n        className=\"order-tabs\"\n      >\n        {tabList.map((tab, index) => (\n          <AtTabsPane key={index} current={current} index={index}>\n            <ScrollView scrollY className=\"order-list\">\n              {loading ? renderLoading() : (\n                orders.length > 0 ? orders.map(renderOrderItem) : renderEmpty()\n              )}\n            </ScrollView>\n          </AtTabsPane>\n        ))}\n      </AtTabs>\n    </View>\n  )\n}\n\nexport default OrderListPage"],"names":["toIOSCompatibleDate","dateStr","includes","replace","parseDate","isoDate","date","Date","isNaN","getTime","warn","OrderListPage","current","setCurrent","useState","orders","setOrders","loading","setLoading","hasMore","setHasMore","page","setPage","tabList","title","statusMap","undefined","useDidShow","fetchOrders","useEffect","usePullDownRefresh","Taro","stopPullDownRefresh","pageNum","status","orderList","orderService","getOrderList","filter","order","displayStatus","paymentStatus","paginatedList","slice","prev","length","error","handleTabClick","index","handleOrderClick","orderNo","navigateTo","url","handlePayOrder","e","stopPropagation","console","log","amount","amountType","showToast","icon","paymentParams","getPaymentParams","requestPayment","success","updateOrderStatus","fail","err","errMsg","handleCancelOrder","showModal","content","res","confirm","result","cancelOrder","refundAmount","toFixed","duration","message","handleRebookOrder","switchTab","getStatusText","statusTextMap","getStatusClass","statusClassMap","formatDate","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","toString","padStart","renderOrderItem","jsxs","View","orderType","jsx","Text","storeName","therapistAvatar","Image","Fragment","therapistName","serviceName","appointmentDate","startTime","extraData","quantity","createdAt","formatAmount","renderEmpty","AtIcon","renderLoading","AtTabs","map","tab","AtTabsPane","ScrollView"],"mappings":"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"}