{"version":3,"file":"index.js","sources":["../../../../src/pages/order/list/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, Image, ScrollView } from '@tarojs/components'\nimport Taro, { useDidShow, usePullDownRefresh } from '@tarojs/taro'\nimport { AtTabs, AtTabsPane, AtIcon } from 'taro-ui'\nimport { orderService, OrderData } from '@/services/order'\nimport './index.scss'\n\nconst OrderListPage: React.FC = () => {\n  const [current, setCurrent] = useState(0)\n  const [orders, setOrders] = useState<OrderData[]>([])\n  const [loading, setLoading] = useState(true)\n\n  const tabList = [\n    { title: '全部' },\n    { title: '待支付' },\n    { title: '待服务' },\n    { title: '已完成' }\n  ]\n\n  const statusMap = {\n    0: undefined, // 全部\n    1: 'pending_payment', // 待支付\n    2: 'paid', // 待服务\n    3: 'completed' // 已完成\n  } as const\n\n  useDidShow(() => {\n    fetchOrders()\n  })\n\n  useEffect(() => {\n    fetchOrders()\n  }, [current])\n\n  usePullDownRefresh(async () => {\n    await fetchOrders()\n    Taro.stopPullDownRefresh()\n  })\n\n  const fetchOrders = async () => {\n    try {\n      setLoading(true)\n      const status = statusMap[current]\n      const orderList = await orderService.getOrderList(status)\n      setOrders(orderList)\n    } catch (error) {\n      Taro.showToast({\n        title: '获取订单失败',\n        icon: 'none'\n      })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleTabClick = (index: number) => {\n    setCurrent(index)\n  }\n\n  const handleOrderClick = (orderNo: string) => {\n    Taro.navigateTo({\n      url: `/pages/order/detail/index?orderNo=${orderNo}`\n    })\n  }\n\n  const handlePayOrder = async (e: any, order: OrderData) => {\n    e.stopPropagation()\n    \n    try {\n      // 获取支付参数\n      const paymentParams = await orderService.getPaymentParams(order.orderNo)\n      \n      // 调用微信支付\n      Taro.requestPayment({\n        ...paymentParams,\n        success: async () => {\n          // 更新订单状态\n          await orderService.updateOrderStatus(order.orderNo, 'paid')\n          Taro.showToast({\n            title: '支付成功',\n            icon: 'success'\n          })\n          // 刷新订单列表\n          fetchOrders()\n        },\n        fail: (err) => {\n          if (err.errMsg !== 'requestPayment:fail cancel') {\n            Taro.showToast({\n              title: '支付失败',\n              icon: 'none'\n            })\n          }\n        }\n      })\n    } catch (error) {\n      Taro.showToast({\n        title: '获取支付参数失败',\n        icon: 'none'\n      })\n    }\n  }\n\n  const handleCancelOrder = async (e: any, order: OrderData) => {\n    e.stopPropagation()\n    \n    Taro.showModal({\n      title: '取消订单',\n      content: '确定要取消该订单吗？',\n      success: async (res) => {\n        if (res.confirm) {\n          try {\n            await orderService.cancelOrder(order.orderNo)\n            Taro.showToast({\n              title: '订单已取消',\n              icon: 'success'\n            })\n            fetchOrders()\n          } catch (error) {\n            Taro.showToast({\n              title: '取消失败',\n              icon: 'none'\n            })\n          }\n        }\n      }\n    })\n  }\n\n  const handleRebookOrder = (e: any, order: OrderData) => {\n    e.stopPropagation()\n    // 跳转到推拿师详情页重新预约\n    Taro.navigateTo({\n      url: `/pages/appointment/therapist/index?therapistId=${order.therapistId}&storeId=${order.storeId}`\n    })\n  }\n\n  const getStatusText = (status: string) => {\n    const statusTextMap = {\n      'pending_payment': '待支付',\n      'paid': '待服务',\n      'serving': '服务中',\n      'completed': '已完成',\n      'cancelled': '已取消',\n      'refunded': '已退款'\n    }\n    return statusTextMap[status] || status\n  }\n\n  const getStatusClass = (status: string) => {\n    const statusClassMap = {\n      'pending_payment': 'status-pending',\n      'paid': 'status-paid',\n      'serving': 'status-serving',\n      'completed': 'status-completed',\n      'cancelled': 'status-cancelled',\n      'refunded': 'status-refunded'\n    }\n    return statusClassMap[status] || ''\n  }\n\n  const formatDate = (dateStr: string) => {\n    const date = new Date(dateStr)\n    const month = date.getMonth() + 1\n    const day = date.getDate()\n    const hour = date.getHours()\n    const minute = date.getMinutes()\n    return `${month}月${day}日 ${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`\n  }\n\n  const renderOrderItem = (order: OrderData) => (\n    <View \n      key={order.orderNo}\n      className=\"order-item\" \n      onClick={() => handleOrderClick(order.orderNo)}\n    >\n      <View className=\"order-header\">\n        <Text className=\"store-name\">{order.storeName}</Text>\n        <Text className={`order-status ${getStatusClass(order.status)}`}>\n          {getStatusText(order.status)}\n        </Text>\n      </View>\n\n      <View className=\"order-content\">\n        <Image \n          className=\"therapist-avatar\" \n          src={order.therapistAvatar || 'https://img.yzcdn.cn/vant/cat.jpeg'} \n        />\n        <View className=\"order-info\">\n          <View className=\"info-row\">\n            <Text className=\"therapist-name\">{order.therapistName}</Text>\n            <Text className=\"service-name\">{order.serviceName}</Text>\n          </View>\n          <View className=\"info-row\">\n            <Text className=\"appointment-time\">\n              预约时间：{formatDate(`${order.appointmentDate} ${order.appointmentTime}`)}\n            </Text>\n          </View>\n          <View className=\"info-row\">\n            <Text className=\"order-no\">订单号：{order.orderNo}</Text>\n          </View>\n        </View>\n      </View>\n\n      <View className=\"order-footer\">\n        <View className=\"price-info\">\n          <Text className=\"label\">实付：</Text>\n          <Text className=\"price\">¥{order.totalAmount}</Text>\n        </View>\n        <View className=\"action-buttons\">\n          {order.status === 'pending_payment' && (\n            <>\n              <View className=\"button cancel\" onClick={(e) => handleCancelOrder(e, order)}>\n                取消订单\n              </View>\n              <View className=\"button pay\" onClick={(e) => handlePayOrder(e, order)}>\n                去支付\n              </View>\n            </>\n          )}\n          {order.status === 'paid' && (\n            <View className=\"button cancel\" onClick={(e) => handleCancelOrder(e, order)}>\n              取消订单\n            </View>\n          )}\n          {(order.status === 'completed' || order.status === 'cancelled') && (\n            <View className=\"button rebook\" onClick={(e) => handleRebookOrder(e, order)}>\n              再次预约\n            </View>\n          )}\n        </View>\n      </View>\n    </View>\n  )\n\n  const renderEmpty = () => (\n    <View className=\"empty-state\">\n      <AtIcon value=\"file-generic\" size=\"60\" color=\"#ccc\" />\n      <Text className=\"empty-text\">暂无订单</Text>\n    </View>\n  )\n\n  const renderLoading = () => (\n    <View className=\"loading-state\">\n      <Text>加载中...</Text>\n    </View>\n  )\n\n  return (\n    <View className=\"order-list-page\">\n      <AtTabs\n        current={current}\n        tabList={tabList}\n        onClick={handleTabClick}\n        className=\"order-tabs\"\n      >\n        {tabList.map((tab, index) => (\n          <AtTabsPane key={index} current={current} index={index}>\n            <ScrollView scrollY className=\"order-list\">\n              {loading ? renderLoading() : (\n                orders.length > 0 ? orders.map(renderOrderItem) : renderEmpty()\n              )}\n            </ScrollView>\n          </AtTabsPane>\n        ))}\n      </AtTabs>\n    </View>\n  )\n}\n\nexport default OrderListPage"],"names":["OrderListPage","current","setCurrent","useState","orders","setOrders","loading","setLoading","tabList","title","statusMap","undefined","useDidShow","useEffect","usePullDownRefresh","fetchOrders","Taro","stopPullDownRefresh","status","orderList","orderService","getOrderList","error","showToast","icon","handleTabClick","index","handleOrderClick","orderNo","navigateTo","url","handlePayOrder","e","order","stopPropagation","paymentParams","getPaymentParams","requestPayment","success","updateOrderStatus","fail","err","errMsg","handleCancelOrder","showModal","content","res","confirm","cancelOrder","handleRebookOrder","therapistId","storeId","getStatusText","statusTextMap","getStatusClass","statusClassMap","formatDate","dateStr","date","Date","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","toString","padStart","renderOrderItem","jsxs","View","jsx","Text","storeName","Image","therapistAvatar","therapistName","serviceName","appointmentDate","appointmentTime","totalAmount","Fragment","renderEmpty","AtIcon","renderLoading","AtTabs","map","tab","AtTabsPane","ScrollView","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,MAAMA,gBAA0BA,MAAM;AACpC,QAAM,CAACC,SAASC,UAAU,IAAIC,cAAS,CAAC;AACxC,QAAM,CAACC,QAAQC,SAAS,IAAIF,KAAAA,SAAsB,CAAE,CAAA;AACpD,QAAM,CAACG,SAASC,UAAU,IAAIJ,cAAS,IAAI;AAE3C,QAAMK,UAAU;AAAA,IACd,EAAEC,OAAO,KAAK;AAAA,IACd,EAAEA,OAAO,MAAM;AAAA,IACf,EAAEA,OAAO,MAAM;AAAA,IACf,EAAEA,OAAO,MAAM;AAAA,EAAA;AAGjB,QAAMC,YAAY;AAAA,IAChB,GAAGC;AAAAA;AAAAA,IACH,GAAG;AAAA;AAAA,IACH,GAAG;AAAA;AAAA,IACH,GAAG;AAAA;AAAA,EAAA;AAGLC,OAAAA,YAAAA,WAAW,MAAM;AACH;EAAA,CACb;AAEDC,OAAAA,UAAU,MAAM;AACF;EAAA,GACX,CAACZ,OAAO,CAAC;AAEZa,OAAAA,YAAAA,mBAAmB,MAAY;AAC7B,UAAMC,YAAY;AAClBC,SAAAA,KAAKC,oBAAoB;AAAA,EAAA,EAC1B;AAED,QAAMF,cAAc,MAAY;AAC1B,QAAA;AACFR,iBAAW,IAAI;AACTW,YAAAA,SAASR,UAAUT,OAAO;AAChC,YAAMkB,YAAY,MAAMC,OAAAA,aAAaC,aAAaH,MAAM;AACxDb,gBAAUc,SAAS;AAAA,aACZG,OAAO;AACdN,WAAAA,KAAKO,UAAU;AAAA,QACbd,OAAO;AAAA,QACPe,MAAM;AAAA,MAAA,CACP;AAAA,IAAA,UACO;AACRjB,iBAAW,KAAK;AAAA,IAClB;AAAA,EAAA;AAGIkB,QAAAA,iBAAiBA,CAACC,WAAkB;AACxCxB,eAAWwB,MAAK;AAAA,EAAA;AAGZC,QAAAA,mBAAmBA,CAACC,YAAoB;AAC5CZ,SAAAA,KAAKa,WAAW;AAAA,MACdC,KAAK,qCAAqCF,OAAO;AAAA,IAAA,CAClD;AAAA,EAAA;AAGGG,QAAAA,iBAAiB,CAAOC,GAAQC,UAAqB;AACzDD,MAAEE,gBAAgB;AAEd,QAAA;AAEF,YAAMC,gBAAgB,MAAMf,OAAagB,aAAAA,iBAAiBH,MAAML,OAAO;AAGvEZ,WAAAA,KAAKqB,eAAe,iCACfF,gBADe;AAAA,QAElBG,SAAS,MAAY;AAEnB,gBAAMlB,OAAamB,aAAAA,kBAAkBN,MAAML,SAAS,MAAM;AAC1DZ,eAAAA,KAAKO,UAAU;AAAA,YACbd,OAAO;AAAA,YACPe,MAAM;AAAA,UAAA,CACP;AAEW;QACd;AAAA,QACAgB,MAAMA,CAACC,QAAQ;AACTA,cAAAA,IAAIC,WAAW,8BAA8B;AAC/C1B,iBAAAA,KAAKO,UAAU;AAAA,cACbd,OAAO;AAAA,cACPe,MAAM;AAAA,YAAA,CACP;AAAA,UACH;AAAA,QACF;AAAA,MAAA,EACD;AAAA,aACMF,OAAO;AACdN,WAAAA,KAAKO,UAAU;AAAA,QACbd,OAAO;AAAA,QACPe,MAAM;AAAA,MAAA,CACP;AAAA,IACH;AAAA,EAAA;AAGImB,QAAAA,oBAAoB,CAAOX,GAAQC,UAAqB;AAC5DD,MAAEE,gBAAgB;AAElBlB,SAAAA,KAAK4B,UAAU;AAAA,MACbnC,OAAO;AAAA,MACPoC,SAAS;AAAA,MACTP,SAAS,CAAOQ,QAAQ;AACtB,YAAIA,IAAIC,SAAS;AACX,cAAA;AACI3B,kBAAAA,oBAAa4B,YAAYf,MAAML,OAAO;AAC5CZ,iBAAAA,KAAKO,UAAU;AAAA,cACbd,OAAO;AAAA,cACPe,MAAM;AAAA,YAAA,CACP;AACW;mBACLF,OAAO;AACdN,iBAAAA,KAAKO,UAAU;AAAA,cACbd,OAAO;AAAA,cACPe,MAAM;AAAA,YAAA,CACP;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAAA,IAAA,CACD;AAAA,EAAA;AAGGyB,QAAAA,oBAAoBA,CAACjB,GAAQC,UAAqB;AACtDD,MAAEE,gBAAgB;AAElBlB,SAAAA,KAAKa,WAAW;AAAA,MACdC,KAAK,kDAAkDG,MAAMiB,WAAW,YAAYjB,MAAMkB,OAAO;AAAA,IAAA,CAClG;AAAA,EAAA;AAGGC,QAAAA,gBAAgBA,CAAClC,WAAmB;AACxC,UAAMmC,gBAAgB;AAAA,MACpB,mBAAmB;AAAA,MACnB,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,aAAa;AAAA,MACb,aAAa;AAAA,MACb,YAAY;AAAA,IAAA;AAEPA,WAAAA,cAAcnC,MAAM,KAAKA;AAAAA,EAAAA;AAG5BoC,QAAAA,iBAAiBA,CAACpC,WAAmB;AACzC,UAAMqC,iBAAiB;AAAA,MACrB,mBAAmB;AAAA,MACnB,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,aAAa;AAAA,MACb,aAAa;AAAA,MACb,YAAY;AAAA,IAAA;AAEPA,WAAAA,eAAerC,MAAM,KAAK;AAAA,EAAA;AAG7BsC,QAAAA,aAAaA,CAACC,YAAoB;AAChCC,UAAAA,OAAO,IAAIC,KAAKF,OAAO;AACvBG,UAAAA,QAAQF,KAAKG,SAAAA,IAAa;AAC1BC,UAAAA,MAAMJ,KAAKK;AACXC,UAAAA,OAAON,KAAKO;AACZC,UAAAA,SAASR,KAAKS;AACpB,WAAO,GAAGP,KAAK,IAAIE,GAAG,KAAKE,KAAKI,SAAWC,EAAAA,SAAS,GAAG,GAAG,CAAC,IAAIH,OAAOE,SAAAA,EAAWC,SAAS,GAAG,GAAG,CAAC;AAAA,EAAA;AAG7FC,QAAAA,kBAAkBA,CAACrC,UACvBsC,qBAAA;AAAA,IAACC,KAAA;AAAA,IAAA;AAAA,MAEC,WAAU;AAAA,MACV,SAAS,MAAM7C,iBAAiBM,MAAML,OAAO;AAAA,MAE7C,UAAA;AAAA,QAAC2C,qBAAAA,KAAAC,KAAAA,MAAA,EAAK,WAAU,gBACd,UAAA;AAAA,UAAAC,qBAAA,IAACC,KAAK,MAAA,EAAA,WAAU,cAAczC,UAAAA,MAAM0C,WAAU;AAAA,UAC7CF,qBAAA,IAAAC,KAAA,MAAA,EAAK,WAAW,gBAAgBpB,eAAerB,MAAMf,MAAM,CAAC,IAC1DkC,UAAAA,cAAcnB,MAAMf,MAAM,EAC7B,CAAA;AAAA,QAAA,GACF;AAAA,QAEAqD,qBAAAA,KAACC,KAAAA,MAAK,EAAA,WAAU,iBACd,UAAA;AAAA,UAAAC,qBAAA;AAAA,YAACG,KAAA;AAAA,YAAA;AAAA,cACC,WAAU;AAAA,cACV,KAAK3C,MAAM4C,mBAAmB;AAAA,YAAA;AAAA,UAAqC;AAAA,UAErEN,qBAAAA,KAACC,KAAAA,MAAK,EAAA,WAAU,cACd,UAAA;AAAA,YAACD,qBAAAA,KAAAC,KAAAA,MAAA,EAAK,WAAU,YACd,UAAA;AAAA,cAAAC,qBAAA,IAACC,KAAK,MAAA,EAAA,WAAU,kBAAkBzC,UAAAA,MAAM6C,eAAc;AAAA,cACrDL,qBAAA,IAAAC,KAAA,MAAA,EAAK,WAAU,gBAAgBzC,gBAAM8C,aAAY;AAAA,YAAA,GACpD;AAAA,qCACCP,KAAK,MAAA,EAAA,WAAU,YACd,UAACD,qBAAA,KAAAG,WAAA,EAAK,WAAU,oBAAkB,UAAA;AAAA,cAAA;AAAA,cAC1BlB,WAAW,GAAGvB,MAAM+C,eAAe,IAAI/C,MAAMgD,eAAe,EAAE;AAAA,YAAA,EAAA,CACtE,EACF,CAAA;AAAA,qCACCT,KAAK,MAAA,EAAA,WAAU,YACd,UAACD,qBAAA,KAAAG,WAAA,EAAK,WAAU,YAAW,UAAA;AAAA,cAAA;AAAA,cAAKzC,MAAML;AAAAA,YAAAA,EAAAA,CAAQ,EAChD,CAAA;AAAA,UAAA,GACF;AAAA,QAAA,GACF;AAAA,QAEA2C,qBAAAA,KAACC,KAAAA,MAAK,EAAA,WAAU,gBACd,UAAA;AAAA,UAACD,qBAAAA,KAAAC,KAAAA,MAAA,EAAK,WAAU,cACd,UAAA;AAAA,YAACC,qBAAA,IAAAC,KAAA,MAAA,EAAK,WAAU,SAAQ,UAAG,OAAA;AAAA,YAC3BH,qBAAAA,KAACG,KAAAA,MAAK,EAAA,WAAU,SAAQ,UAAA;AAAA,cAAA;AAAA,cAAEzC,MAAMiD;AAAAA,YAAAA,GAAY;AAAA,UAAA,GAC9C;AAAA,UACAX,qBAAAA,KAACC,KAAAA,MAAK,EAAA,WAAU,kBACbvC,UAAAA;AAAAA,YAAMf,MAAAA,WAAW,qBAEdqD,qBAAA,KAAAY,KAAA,UAAA,EAAA,UAAA;AAAA,cAACV,qBAAAA,IAAAD,KAAAA,MAAA,EAAK,WAAU,iBAAgB,SAAS,CAACxC,MAAMW,kBAAkBX,GAAGC,KAAK,GAAE,UAE5E,OAAA,CAAA;AAAA,cACAwC,qBAAAA,IAACD,KAAAA,MAAK,EAAA,WAAU,cAAa,SAAS,CAACxC,MAAMD,eAAeC,GAAGC,KAAK,GAAE,UAEtE,MAAA,CAAA;AAAA,YAAA,GACF;AAAA,YAEDA,MAAMf,WAAW,UAChBuD,qBAAA,IAACD,aAAK,WAAU,iBAAgB,SAAS,CAACxC,MAAMW,kBAAkBX,GAAGC,KAAK,GAAE,UAE5E,QAAA;AAAA,aAEAA,MAAMf,WAAW,eAAee,MAAMf,WAAW,gBAChDuD,yBAAAD,KAAAA,MAAA,EAAK,WAAU,iBAAgB,SAAS,CAACxC,MAAMiB,kBAAkBjB,GAAGC,KAAK,GAAE,UAE5E,QAAA;AAAA,UAAA,GAEJ;AAAA,QAAA,GACF;AAAA,MAAA;AAAA,IAAA;AAAA,IA3DKA,MAAML;AAAAA,EAAAA;AA+Df,QAAMwD,cAAcA,MACjBb,0BAAAC,KAAAA,MAAA,EAAK,WAAU,eACd,UAAA;AAAA,IAAAC,yBAACY,QAAAA,UAAO,OAAM,gBAAe,MAAK,MAAK,OAAM,QAAM;AAAA,IAClDZ,qBAAA,IAAAC,KAAA,MAAA,EAAK,WAAU,cAAa,UAAI,QAAA;AAAA,EACnC,EAAA,CAAA;AAGIY,QAAAA,gBAAgBA,MACnBb,qBAAAA,IAAAD,KAAAA,MAAA,EAAK,WAAU,iBACd,UAAAC,qBAAA,IAACC,KAAK,MAAA,EAAA,UAAA,SAAM,CAAA,EACd,CAAA;AAIA,SAAAD,qBAAAA,IAACD,KAAAA,MAAK,EAAA,WAAU,mBACd,UAAAC,qBAAA;AAAA,IAACc,QAAA;AAAA,IAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA,SAAS9D;AAAAA,MACT,WAAU;AAAA,MAETjB,UAAQgF,QAAAA;AAAAA,QAAI,CAACC,KAAK/D,WAChB+C,qBAAA,IAAAiB,QAAA,YAAA,EAAuB,SAAkB,OAAAhE,QACxC,UAAC+C,qBAAA,IAAAkB,KAAA,YAAA,EAAW,SAAO,MAAC,WAAU,cAC3BrF,oBAAUgF,cAAc,IACvBlF,OAAOwF,SAAS,IAAIxF,OAAOoF,IAAIlB,eAAe,IAAIc,YAEtD,EAAA,CAAA,EAAA,GALe1D,MAMjB;AAAA,MACD;AAAA,IAAA;AAAA,EAEL,EAAA,CAAA;AAEJ;;;;;;;;;;"}