{"version":3,"file":"common.js","sources":["../src/services/location.ts"],"sourcesContent":["import Taro from '@tarojs/taro'\n\nexport interface Location {\n  latitude: number\n  longitude: number\n}\n\nclass LocationService {\n  // 获取用户当前位置\n  async getCurrentLocation(): Promise<Location> {\n    try {\n      // 检查授权状态\n      const { authSetting } = await Taro.getSetting()\n      \n      if (!authSetting['scope.userLocation']) {\n        // 请求授权\n        await Taro.authorize({\n          scope: 'scope.userLocation'\n        })\n      }\n      \n      // 获取位置\n      const res = await Taro.getLocation({\n        type: 'gcj02', // 返回可用于 openLocation 的坐标\n        isHighAccuracy: true // 开启高精度\n      })\n      \n      return {\n        latitude: res.latitude,\n        longitude: res.longitude\n      }\n    } catch (error) {\n      console.error('获取位置失败:', error)\n      \n      // 如果用户拒绝授权，使用默认位置（上海市中心）\n      if (error?.errMsg?.includes('auth deny')) {\n        Taro.showModal({\n          title: '提示',\n          content: '需要获取您的位置信息来推荐附近门店',\n          confirmText: '去设置',\n          success: (res) => {\n            if (res.confirm) {\n              Taro.openSetting()\n            }\n          }\n        })\n        \n        // 返回默认位置\n        return {\n          latitude: 31.2304,\n          longitude: 121.4737\n        }\n      }\n      \n      throw error\n    }\n  }\n  \n  // 计算两点之间的距离（单位：公里）\n  calculateDistance(\n    lat1: number,\n    lng1: number,\n    lat2: number,\n    lng2: number\n  ): number {\n    const rad = Math.PI / 180\n    const R = 6371 // 地球半径（公里）\n    \n    const dLat = (lat2 - lat1) * rad\n    const dLng = (lng2 - lng1) * rad\n    \n    const a = \n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(lat1 * rad) * Math.cos(lat2 * rad) *\n      Math.sin(dLng / 2) * Math.sin(dLng / 2)\n      \n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n    \n    return Number((R * c).toFixed(1))\n  }\n  \n  // 格式化距离显示\n  formatDistance(distance: number): string {\n    if (distance < 1) {\n      return `${Math.round(distance * 1000)}m`\n    }\n    return `${distance}km`\n  }\n}\n\nexport const getLocationService = new LocationService()"],"names":["LocationService","getCurrentLocation","authSetting","Taro","getSetting","authorize","scope","res","getLocation","type","isHighAccuracy","latitude","longitude","error","errMsg","includes","showModal","title","content","confirmText","success","confirm","openSetting","calculateDistance","lat1","lng1","lat2","lng2","rad","Math","PI","R","dLat","dLng","a","sin","cos","c","atan2","sqrt","Number","toFixed","formatDistance","distance","round","getLocationService"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAOA,MAAMA,gBAAgB;AAAA;AAAA,EAEdC,qBAAwC;AAAA;;AACxC,UAAA;AAEI,cAAA;AAAA,UAAEC;AAAAA,QAAAA,IAAgB,MAAMC,KAAAA,KAAKC;AAE/B,YAAA,CAACF,YAAY,oBAAoB,GAAG;AAEtC,gBAAMC,KAAAA,KAAKE,UAAU;AAAA,YACnBC,OAAO;AAAA,UAAA,CACR;AAAA,QACH;AAGMC,cAAAA,MAAM,MAAMJ,KAAAA,KAAKK,YAAY;AAAA,UACjCC,MAAM;AAAA;AAAA,UACNC,gBAAgB;AAAA;AAAA,QAAA,CACjB;AAEM,eAAA;AAAA,UACLC,UAAUJ,IAAII;AAAAA,UACdC,WAAWL,IAAIK;AAAAA,QAAAA;AAAAA,eAEVC,OAAO;AACNA,gBAAAA,MAAM,WAAWA,KAAK;AAG9B,aAAIA,oCAAOC,WAAPD,mBAAeE,SAAS,cAAc;AACxCZ,eAAAA,KAAKa,UAAU;AAAA,YACbC,OAAO;AAAA,YACPC,SAAS;AAAA,YACTC,aAAa;AAAA,YACbC,SAAUb,CAAQ,QAAA;AAChB,kBAAIA,IAAIc,SAAS;AACflB,qBAAAA,KAAKmB,YAAY;AAAA,cACnB;AAAA,YACF;AAAA,UAAA,CACD;AAGM,iBAAA;AAAA,YACLX,UAAU;AAAA,YACVC,WAAW;AAAA,UAAA;AAAA,QAEf;AAEMC,cAAAA;AAAAA,MACR;AAAA,IACF;AAAA;AAAA;AAAA,EAGAU,kBACEC,MACAC,MACAC,MACAC,MACQ;AACFC,UAAAA,MAAMC,KAAKC,KAAK;AACtB,UAAMC,IAAI;AAEJC,UAAAA,QAAQN,OAAOF,QAAQI;AACvBK,UAAAA,QAAQN,OAAOF,QAAQG;AAE7B,UAAMM,IACJL,KAAKM,IAAIH,OAAO,CAAC,IAAIH,KAAKM,IAAIH,OAAO,CAAC,IACtCH,KAAKO,IAAIZ,OAAOI,GAAG,IAAIC,KAAKO,IAAIV,OAAOE,GAAG,IAC1CC,KAAKM,IAAIF,OAAO,CAAC,IAAIJ,KAAKM,IAAIF,OAAO,CAAC;AAExC,UAAMI,IAAI,IAAIR,KAAKS,MAAMT,KAAKU,KAAKL,CAAC,GAAGL,KAAKU,KAAK,IAAIL,CAAC,CAAC;AAEvD,WAAOM,QAAQT,IAAIM,GAAGI,QAAQ,CAAC,CAAC;AAAA,EAClC;AAAA;AAAA,EAGAC,eAAeC,UAA0B;AACvC,QAAIA,WAAW,GAAG;AAChB,aAAO,GAAGd,KAAKe,MAAMD,WAAW,GAAI,CAAC;AAAA,IACvC;AACA,WAAO,GAAGA,QAAQ;AAAA,EACpB;AACF;AAEaE,MAAAA,qBAAqB,IAAI7C,gBAAgB;;"}